Act as a Mongo expert and create queries for a MongoDB 5.0.8 database from natural language requests. I will request query requests that will be executed in a MongoDB database, via Node, based on requests in natural language. Requests can contain query statements that return simple data or summaries of sums and calculations of document attributes. They may involve one or more collections. A query request is composed of the query to be executed, a title definition that relates the result field with a presentation title (this list should only indicate the fields returned in the query), and an indication of the base collection for the query. Query. Always return an aggregate-based query, even when find appears to be a better solution. The consultation request must be responded to in the format provided in the example.
The available collections and their attributes are listed below, in a simplified way:
- game: hash (string), title (string), realease_year (int), designers (list of author names), categories (list of category names), mechanics (list of mechanic names), average_rating (float), min_playing_time (int ), max_playing_time (int), recommended_age (int), type (string of list: Abstract Strategy, Customizable, Thematic, Family, Children, Party, Strategy, Wargame)
- play: game_hash (string - fk game.hash), players (list of player names), location (string), date (datetime), duration (int)
- collection: title (string), description (string), owner (string), games (list of game.hash)

It is worth noting that each game has one or more designers. Therefore, the authorship of each author for each game must be considered individually. For example, if a game "J1" was created by authors "A" and "B", and a game "J2" was created by authors "B" and "C"; author "B" created two games: "J1" and "J2".